name: Deploy (production)

on:
    push:
        branches: [main]

env:
    REGISTRY: ghcr.io

jobs:
    check:
        uses: ./.github/workflows/check.yaml
    build:
        name: "Build containers"
        runs-on: "ubuntu-latest"
        needs: check
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Determine the short hash of the current commit
              run: echo "SHORT_HASH=$(git rev-parse --short HEAD)" >>${GITHUB_ENV}

            - name: Create the name of the frontend image
              run: echo "FRONTEND_IMAGE_NAME=${REGISTRY}/${GITHUB_REPOSITORY,,}-frontend" >>${GITHUB_ENV}

            - name: Create the name of the backend image
              run: echo "BACKEND_IMAGE_NAME=${REGISTRY}/${GITHUB_REPOSITORY,,}-backend" >>${GITHUB_ENV}

            - name: Log in to the GitHub Container registry
              uses: docker/login-action@d398f07826957cd0a18ea1b059cf1207835e60bc
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build the frontend Docker image
              run: docker image build --tag '${{ env.FRONTEND_IMAGE_NAME }}:latest' --tag '${{ env.FRONTEND_IMAGE_NAME }}:${{ env.SHORT_HASH }}' ./frontend

            - name: Build the backend Docker image
              run: docker image build --tag '${{ env.BACKEND_IMAGE_NAME }}:latest' --tag '${{ env.BACKEND_IMAGE_NAME }}:${{ env.SHORT_HASH }}' ./backend

            - name: Push the frontend Docker image
              run: docker image push --all-tags '${{ env.FRONTEND_IMAGE_NAME }}'

            - name: Push the backend Docker image
              run: docker image push --all-tags '${{ env.BACKEND_IMAGE_NAME }}'
    deploy:
        name: "Deploy to production"
        runs-on: "ubuntu-latest"
        environment: production
        needs: build

        permissions:
            packages: read

        steps:
            - name: Invoke deployment hook
              uses: distributhor/workflow-webhook@v2
              env:
                  webhook_url: ${{ secrets.WEBHOOK_URL }}
                  webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
